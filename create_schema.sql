-- MySQL Script generated by MySQL Workbench
-- Thu Sep  2 16:52:36 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema who's_fooling_who
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema who's_fooling_who
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `who's_fooling_who` DEFAULT CHARACTER SET utf8 ;
USE `who's_fooling_who` ;

-- -----------------------------------------------------
-- Table `who's_fooling_who`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `who's_fooling_who`.`roles` (
  `idRole` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idRole`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `who's_fooling_who`.`users`
-- -----------------------------------------------------
CREATE TABLE accounts
  (
    id                   INT NOT NULL AUTO_INCREMENT,
    compound_id          VARCHAR(255) NOT NULL,
    user_id              INTEGER NOT NULL,
    provider_type        VARCHAR(255) NOT NULL,
    provider_id          VARCHAR(255) NOT NULL,
    provider_account_id  VARCHAR(255) NOT NULL,
    refresh_token        TEXT,
    access_token         TEXT,
    access_token_expires TIMESTAMP(6),
    created_at           TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at           TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id)
  );

CREATE TABLE sessions
  (
    id            INT NOT NULL AUTO_INCREMENT,
    user_id       INTEGER NOT NULL,
    expires       TIMESTAMP(6) NOT NULL,
    session_token VARCHAR(255) NOT NULL,
    access_token  VARCHAR(255) NOT NULL,
    created_at    TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at    TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id)
  );

CREATE TABLE users
  (
    id             INT NOT NULL AUTO_INCREMENT,
    name           VARCHAR(255),
    email          VARCHAR(255),
    email_verified TIMESTAMP(6),
    image          VARCHAR(255),
    created_at     TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at     TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    Role_idRole	  INT NOT NULL,
    PRIMARY KEY (id),
    INDEX `fk_User_Role1_idx` (`Role_idRole` ASC) VISIBLE,
    CONSTRAINT `fk_User_Role1`
      FOREIGN KEY (`Role_idRole`)
      REFERENCES `who's_fooling_who`.`roles` (`idRole`)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
  );

CREATE TABLE verification_requests
  (
    id         INT NOT NULL AUTO_INCREMENT,
    identifier VARCHAR(255) NOT NULL,
    token      VARCHAR(255) NOT NULL,
    expires    TIMESTAMP(6) NOT NULL,
    created_at TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at TIMESTAMP(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id)
  );

CREATE UNIQUE INDEX compound_id
  ON accounts(compound_id);

CREATE INDEX provider_account_id
  ON accounts(provider_account_id);

CREATE INDEX provider_id
  ON accounts(provider_id);

CREATE INDEX user_id
  ON accounts(user_id);

CREATE UNIQUE INDEX session_token
  ON sessions(session_token);

CREATE UNIQUE INDEX access_token
  ON sessions(access_token);

CREATE UNIQUE INDEX email
  ON users(email);

CREATE UNIQUE INDEX token
  ON verification_requests(token);

-- -----------------------------------------------------
-- Table `who's_fooling_who`.`friends`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `who's_fooling_who`.`friends` (
  `Follower` INT NOT NULL,
  `Followee` INT NOT NULL,
  PRIMARY KEY (`Follower`, `Followee`),
  INDEX `fk_User_has_User_User1_idx` (`Followee` ASC) VISIBLE,
  INDEX `fk_User_has_User_User_idx` (`Follower` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_User_User`
    FOREIGN KEY (`Follower`)
    REFERENCES `who's_fooling_who`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_User_User1`
    FOREIGN KEY (`Followee`)
    REFERENCES `who's_fooling_who`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `who's_fooling_who`.`question_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `who's_fooling_who`.`question_types` (
  `idQuestion_Type` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `data_type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idQuestion_Type`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `who's_fooling_who`.`questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `who's_fooling_who`.`questions` (
  `idQuestions` INT NOT NULL AUTO_INCREMENT,
  `headline` VARCHAR(45) NOT NULL,
  `Question_Type_idQuestion_Type` INT NOT NULL,
  `body` LONGTEXT NOT NULL,
  `imageUrl` VARCHAR(45) NULL,
  PRIMARY KEY (`idQuestions`),
  INDEX `fk_Question_Question_Type1_idx` (`Question_Type_idQuestion_Type` ASC) VISIBLE,
  CONSTRAINT `fk_Question_Question_Type1`
    FOREIGN KEY (`Question_Type_idQuestion_Type`)
    REFERENCES `who's_fooling_who`.`question_types` (`idQuestion_Type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `who's_fooling_who`.`answers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `who's_fooling_who`.`answers` (
  `idAnswers` INT NOT NULL AUTO_INCREMENT,
  `answer` TINYINT NOT NULL,
  `statement` VARCHAR(45) NULL,
  `Questions_idQuestion` INT NOT NULL,
  PRIMARY KEY (`idAnswers`),
  INDEX `fk_Answer_Question1_idx` (`Question_idQuestion` ASC) VISIBLE,
  CONSTRAINT `fk_Answer_Question1`
    FOREIGN KEY (`Question_idQuestion`)
    REFERENCES `who's_fooling_who`.`questions` (`idQuestions`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `who's_fooling_who`.`quizzes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `who's_fooling_who`.`quizzes` (
  `idQuiz` INT NOT NULL AUTO_INCREMENT,
  `link` VARCHAR(45) NOT NULL,
  `expiry` VARCHAR(45) NOT NULL,
  `time` INT NOT NULL,
  `level` VARCHAR(45) NULL,
  PRIMARY KEY (`idQuiz`),
  UNIQUE INDEX `link_UNIQUE` (`link` ASC) VISIBLE,
  UNIQUE INDEX `level_UNIQUE` (`level` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `who's_fooling_who`.`quizzes_has_questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `who's_fooling_who`.`quizzes_has_questions` (
  `Quiz_idQuiz` INT NOT NULL,
  `Question_idQuestion` INT NOT NULL,
  PRIMARY KEY (`Quiz_idQuiz`, `Question_idQuestion`),
  INDEX `fk_Quiz_has_Question_Question1_idx` (`Question_idQuestion` ASC) VISIBLE,
  INDEX `fk_Quiz_has_Question_Quiz1_idx` (`Quiz_idQuiz` ASC) VISIBLE,
  CONSTRAINT `fk_Quiz_has_Question_Quiz1`
    FOREIGN KEY (`Quiz_idQuiz`)
    REFERENCES `who's_fooling_who`.`quizzes` (`idQuiz`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Quiz_has_Question_Question1`
    FOREIGN KEY (`Question_idQuestion`)
    REFERENCES `who's_fooling_who`.`questions` (`idQuestions`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `who's_fooling_who`.`quizzes_has_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `who's_fooling_who`.`quizzes_has_users` (
  `Quiz_idQuiz` INT NOT NULL,
  `User_idUser` INT NOT NULL,
  `score` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Quiz_idQuiz`, `User_idUser`),
  INDEX `fk_Quiz_has_User_User1_idx` (`User_idUser` ASC) VISIBLE,
  INDEX `fk_Quiz_has_User_Quiz1_idx` (`Quiz_idQuiz` ASC) VISIBLE,
  CONSTRAINT `fk_Quiz_has_User_Quiz1`
    FOREIGN KEY (`Quiz_idQuiz`)
    REFERENCES `who's_fooling_who`.`quizzes` (`idQuiz`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Quiz_has_User_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `who's_fooling_who`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

ALTER TABLE `quizzes` ADD UNIQUE `unique_index`(`user`, `email`, `address`);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
